@page "/"
@using BlazingPizzaSite.Models;
@using BlazingPizzaSite.Services
@inject HttpClient httpClient;
@inject NavigationManager navigationManager;
@inject OrderState _orderState;

<div class="main">
    <h1>Blazing Pizzas</h1>
    <ul class="pizza-cards">
        @if(specials != null)
        {
            @foreach(var special in specials)
            {
                <li @onclick="@(() => _orderState.ShowConfigurePizzaDialog(special))" style="background-image: url('@special.ImageUrl')">
                    <div class="pizza-info">
                        <span class="title">@special.Name</span>
                        @special.Description
                        <span class="price">@special.GetFormattedBasePrice()</span>
                    </div>
                </li>
            }
        }
    </ul>
</div>

@if(_orderState.ShowingConfigureDialog)
{
    <ConfigurePizzaDialog 
        Pizza="_orderState.ConfiguringPizza" 
        OnCancel="_orderState.CancelConfigurePizzaDialog" 
        OnConfirm="_orderState.ConfirmConfigurePizzaDialog" />
}

<div class="sidebar">
    @if(order.Pizzas.Any())
    {
        <div class="order-contents">
            <h2>Your Order</h2>
            @foreach(var configuredPizza in order.Pizzas)
            {
                <div class="cart-item">
                    <div class="title">@(configuredPizza.Size)" @configuredPizza.Special.Name</div>
                    <div class="item-price">
                        @configuredPizza.GetFormattedTotalPrice()
                    </div>
                    <a @onclick="@(() => _orderState.RemoveConfiguredPizza(configuredPizza))" class="delete-item">x</a>
                </div>
            }
        
        
        </div>
    }
    else
    {
        <div class="empty-cart">Choose a pizza<br>to get started</div>
    }

    <div class="order-total @(order.Pizzas.Any() ? "" : "hidden")">
        Total:
        <span class="total-price">@order.GetFormattedTotalPrice()</span>
        <a href="checkout" class="@(_orderState.Order.Pizzas.Count == 0 ? "btn btn-warning disabled" : "btn btn-warning")">
            Order
        </a>
    </div>
</div>

@code{

    private List<PizzaSpecial> specials = new();
    private Order order => _orderState.Order;

    protected override async Task OnInitializedAsync()
    {
        specials = await httpClient.GetFromJsonAsync<List<PizzaSpecial>>(navigationManager.BaseUri + "specials");

    }
}