@page "/pages/form/{id:long?}"
@using Microsoft.AspNetCore.Mvc.RazorPages;
@using Microsoft.EntityFrameworkCore;
@using System.Text.Json;
@model FormHandlerModel

<div class="m-2">
    <h5 class="bg-primary text-white text-center p-2">HTML Form</h5>
    <form action="/pages/form" method="post" id="htmlform">
        <div class="form-group">
            <label>Name</label>
            <input class="form-control" asp-for="Product.Name" name="name" />
        </div>
        <div class="form-group">
            <label>Price</label>
            <input class="form-control" asp-for="Product.Price" name="price" />
        </div>
        <div class="form-group">
                <label>Category</label>
                <input class="form-control" asp-for="Product.Category.Name" />
        </div>
        <div class="form-group">
                <label>Supplier</label>
                <input class="form-control" asp-for="Product.Supplier.Name" />
        </div>
        <button type="submit" class="btn btn-primary mt-2">Submit</button>
    </form>
    <button form="htmlform" asp-action="submitform" class="btn btn-primary mt-2">
        Submit (Outside Form)
    </button>
</div>

@functions{

    [IgnoreAntiforgeryToken]
    public class FormHandlerModel : PageModel
    {
        private DataContext _dataContext;

        [BindProperty]
        public Product? Product { get; set; }

        public FormHandlerModel(DataContext dataContext)
        {
            _dataContext = dataContext;
        }

        public async Task OnGetAsync(long id = 1)
        {
            Product = await _dataContext.Products
            .Include(supplier => supplier.Supplier)
            .Include(category => category.Category)
            .FirstOrDefaultAsync(product => product.ProductId == id);
        }

        public IActionResult OnPost(/*string name, string price*/ Product product)
        {
            //TempData["name parameter"] = name;
            //TempData["price parameter"] = $"{price}";
            TempData["product"] = JsonSerializer.Serialize(product);
            foreach (string key in Request.Form.Keys.Where(k => !k.StartsWith("_")))
            {
                TempData[key] = string.Join(", ", Request.Form[key]);
            }
            return Redirect("results");
        }
    }
}