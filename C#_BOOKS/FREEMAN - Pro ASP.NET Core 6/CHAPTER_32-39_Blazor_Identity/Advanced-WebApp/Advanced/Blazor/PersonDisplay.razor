@page "/person";
@page "/person/{id:long}";

<h5>Editor for Person @Id</h5>

@if(Person == null)
{
    <h5 class="bg-info text-white text-center p-2">Loading...</h5>
}
else
{
    <table class="table table-striped table-bordered">
        <tbody>
            <tr>
                <th>Id</th>
                <td>@Person.PersonId</td>
            </tr>
            <tr>
                <th>Surname</th>
                <td>@Person.Surname</td>
            </tr>
            <tr>
                <th>Firstname</th>
                <td>@Person.Firstname</td>
            </tr>
        </tbody>
    </table>
}

<button class="btn btn-outline-primary" @onclick="@(() => HandleClick(false))">Previous</button>
<button class="btn btn-outline-primary" @onclick="@(() => HandleClick(true))">Next</button>

<NavLink
    class="btn btn-primary"
    href="/people">
    Return
</NavLink>

@code {
    [Inject]
    public DataContext? DataContext { get; set; }

    [Inject]
    public NavigationManager? NavigationManager { get; set; }

    [Parameter]
    public long Id{ get; set; }

    public Person? Person { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await Task.Delay(1000);
        if (DataContext != null)
            Person = await DataContext.People.FirstOrDefaultAsync(person => person.PersonId == Id) ?? new Person();
    }

    public void HandleClick(bool increment)
    {
        Person = null;
        NavigationManager?.NavigateTo($"/person/{(increment ? Id + 1 : Id - 1)}");
    }
}
