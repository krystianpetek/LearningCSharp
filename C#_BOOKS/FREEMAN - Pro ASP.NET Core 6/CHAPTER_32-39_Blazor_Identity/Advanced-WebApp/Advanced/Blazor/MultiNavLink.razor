<a 
    class="@ComputedClass" 
    @onclick="HandleClick"
    href="">
    @ChildContent
</a>

@code{
    [Inject]
    public NavigationManager? NavigationManager { get; set; }

    [Parameter]
    public IEnumerable<string> Href { get; set; } = Enumerable.Empty<string>();

    [Parameter]
    public string Class { get; set; } = string.Empty;

    [Parameter]
    public string ActiveClass { get; set; } = string.Empty;

    public NavLinkMatch? Match { get; set; } 

    public NavLinkMatch ComputedMatch
    {
        get => Match ?? (Href.Count() == 1 ? NavLinkMatch.Prefix : NavLinkMatch.All);
    }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    public string ComputedClass { get; set; } = string.Empty;

    public void HandleClick()
    {
        NavigationManager?.NavigateTo(Href.First());
    }

    private void CheckMatch(string currentUrl)
    {
        string path = NavigationManager?.ToBaseRelativePath(currentUrl);
        path = path.EndsWith("/") ? path.Substring(0, path.Length - 1) : path;
        bool match = Href.Any(href => ComputedMatch == NavLinkMatch.All ? path == href : path.StartsWith(href));
        ComputedClass = match ? $"{Class} {ActiveClass}" : Class;
    }

    protected override void OnParametersSet()
    {
        ComputedClass = Class;
        NavigationManager.LocationChanged += (sender, arg) => CheckMatch(arg.Location);
        Href = Href.Select(h => h.StartsWith("/") ? h.Substring(1) : h);
        CheckMatch(NavigationManager.Uri);
    }
}