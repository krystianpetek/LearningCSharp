<div class="form-group p-2 bg-@Theme @TextColor">
    <label for="select-@Title"></label>
    <select 
        name="select-@Title" 
        class="form-control"
        @onchange="HandleSelect"
        @attributes="Attrs">
            <option disabled selected value="">Select @Title</option>
        @{
            foreach (string value in Values)
            {
                <option value="@value" selected="@(value == SelectedValue)">
                    @value
                </option>
            }
        }
    </select>
</div>

@code {
    [Parameter]
    public IEnumerable<string> Values { get; set; } = Enumerable.Empty<string>();

    [Parameter]
    public string? SelectedValue { get; set; }

    [Parameter]
    public string Title { get; set; } = "Placeholder";

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? Attrs { get; set; }

    [Parameter]
    public EventCallback<string> SelectedValueChanged { get; set; }

    public async Task HandleSelect(ChangeEventArgs changeEvent)
    {
        SelectedValue = changeEvent.Value as string;
        await SelectedValueChanged.InvokeAsync(SelectedValue);
    }

    [CascadingParameter(Name = "BgTheme")]
    public string Theme { get; set; } = "";

    public string TextColor => string.IsNullOrEmpty(Theme) ? "text-dark" : "text-light";
}