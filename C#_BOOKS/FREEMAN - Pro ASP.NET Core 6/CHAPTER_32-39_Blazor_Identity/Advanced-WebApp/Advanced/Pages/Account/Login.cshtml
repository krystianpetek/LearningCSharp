@page
@model LoginModel

<div class="bg-primary text-center text-white p-2">Log In</div>

<div class="m-1 text-danger" asp-validation-summary="All"></div>

<form method="post">
    <input type="hidden"
        name="returnUrl"
        value="@Model.ReturnUrl" />

    <div class="form-group">
        <label>UserName</label>
        <input class="form-control" asp-for="UserName" />
    </div>
    <div class="form-group">
        <label>Password</label>
        <input class="form-control" asp-for="Password" type="password" />
    </div>
    <button class="btn btn-primary mt-2" type="submit">Log In</button>
</form>

@functions{
    public class LoginModel : PageModel
    {
        private SignInManager<IdentityUser> SignInManager;

        public LoginModel(SignInManager<IdentityUser> signInManager)
        {
            SignInManager = signInManager;
        }

        [BindProperty]
        public string UserName { get; set; } = string.Empty;

        [BindProperty]
        public string Password { get; set; } = string.Empty;

        [BindProperty(SupportsGet = true)]
        public string? ReturnUrl { get; set; }

        public async Task<IActionResult> OnGet()
        {
            if (User.Identity.IsAuthenticated)
                return RedirectToPage("Details");

            return Page();
        }

        public async Task<IActionResult> OnPostAsync()
        {
            if (ModelState.IsValid)
            {
                Microsoft.AspNetCore.Identity.SignInResult signInResult = await SignInManager.PasswordSignInAsync(UserName, Password, false, false);
                if (signInResult.Succeeded)
                {
                    return Redirect(ReturnUrl ?? "/account/details");
                }
                ModelState.AddModelError("", "Invalid username or password");
            }
            return Page();
        }
    }
}
