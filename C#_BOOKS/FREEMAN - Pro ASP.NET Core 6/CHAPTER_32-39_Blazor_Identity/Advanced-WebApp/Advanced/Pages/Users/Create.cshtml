@page
@model CreateModel

<h5 class="bg-primary text-white text-center p-2">Create User</h5>

<form method="post">
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group">
        <label>User name</label>
        <input 
            name="UserName"
            class="form-control"
            value="@Model.UserName" />
    </div>
    <div class="form-group">
        <label>Email</label>
        <input 
            name="Email"
            class="form-control"
            value="@Model.Email" />
    </div>
    <div class="form-group">
        <label>Password</label>
        <input 
            name="Password"
            type="password"
            class="form-control"
            value="@Model.Password" />
    </div>
    <div class="py-2">
        <button type="submit"
            class="btn btn-primary">
            Submit
        </button>
        <a class="btn btn-primary"
            asp-page="List">
            Back
        </a>
    </div>
</form>
@functions{
    public class CreateModel : AdminPageModel
    {
        public UserManager<IdentityUser> UserManager;

        public CreateModel(UserManager<IdentityUser> userManager)
        {
            UserManager = userManager;
        }

        [BindProperty]
        public string UserName { get; set; } = string.Empty;

        [BindProperty]
        [EmailAddress]
        public string Email { get; set; } = string.Empty;

        [BindProperty]
        public string Password { get; set; } = string.Empty;

        public async Task<IActionResult> OnPostAsync()
        {
            if (ModelState.IsValid)
            {
                IdentityUser user = new IdentityUser
                {
                    UserName = this.UserName,
                    Email = this.Email,
                };
                IdentityResult result = await UserManager.CreateAsync(user, Password);
                if(result.Succeeded)
                    return RedirectToPage("List");

                foreach(IdentityError error in result.Errors)
                {
                    ModelState.AddModelError("", error.Description);
                }
            }
            return Page();
        }
    }
}
