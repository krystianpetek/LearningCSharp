@page "/pages/message"
@using Microsoft.AspNetCore.Mvc.RazorPages
@using WebApp.Filters;
@model MessageModel

@{
    if (Model.Message is string)
    {
        @Model.Message
    }
    else if (Model.Message is IDictionary<string, string>)
    {
        var dictionary = Model.Message as IDictionary<string, string>;
        <table class="table table-sm table-striped table-bordered">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Value</th>
                </tr>
            </thead>
            <tbody>
        @{
            foreach (var keyValuePair in dictionary ?? new Dictionary<string, string>())
            {
                <tr>
                    <td>@keyValuePair.Key</td>
                    <td>@keyValuePair.Value</td>
                </tr>
            }
        }
            </tbody>
        </table>
    }
}

@functions {
    
    [RequireHttps]
    [SimpleCache]
    public class MessageModel : PageModel
    {
        public object Message { get; set; } = $"{DateTime.Now.ToLongTimeString()}: This is the Message Razor Page";

        public IActionResult OnGet()
        {
            if (!Request.IsHttps)
                return new StatusCodeResult(StatusCodes.Status403Forbidden);

            return Page();
        }
    }
}
